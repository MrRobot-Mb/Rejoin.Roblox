local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function GetDeviceType()
    if game:GetService("UserInputService").TouchEnabled then
        return "Mobile"
    elseif game:GetService("UserInputService").KeyboardEnabled then
        return "PC"
    elseif game:GetService("UserInputService").GamepadEnabled then
        return "Console"
    else
        return "Unknown"
    end
end

local function ServerHop()
    local PlaceId = game.PlaceId
    local servers = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
    
    local targetServerId = nil
    local deviceType = GetDeviceType()
    
    for _, server in ipairs(servers.data) do
        local playerCount = server.playing
        local maxPlayers = server.maxPlayers
        local occupancy = playerCount / maxPlayers
        local isFriendInServer = false
        
        for _, player in ipairs(server.players) do
            if Players:GetPlayerByUserId(player.userId) and Players:GetPlayerByUserId(player.userId).IsFriendsWith(LocalPlayer.UserId) then
                isFriendInServer = true
                break
            end
        end
        
        if not isFriendInServer then
            if deviceType == "Mobile" and occupancy <= 0.5 then
                targetServerId = server.id
                break
            elseif deviceType == "PC" and occupancy <= 0.75 then
                targetServerId = server.id
                break
            elseif deviceType == "Console" and occupancy <= 0.6 then
                targetServerId = server.id
                break
            elseif deviceType == "Unknown" and occupancy <= 0.5 then
                targetServerId = server.id
                break
            end
        end
    end
    
    if targetServerId then
        TeleportService:TeleportToPlaceInstance(PlaceId, targetServerId, LocalPlayer)
    else
        print("No suitable server found.")
    end
end

ServerHop()
